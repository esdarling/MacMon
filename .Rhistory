((bleach1 / total) * 2) +
((bleach2 / total) * 3) +
((bleach3 / total) * 4) +
((bleach4 / total) * 5) +
((recentdead / total) * 6)))
View(`d6`)
d6 <- d2 %>%
mutate(bleached.cols = total - (normal + pale)) %>%
mutate(ifelse, total == 0,0,perc_bleach = bleached.cols / total) %>%
mutate(bleach_response = ifelse(total == 0, 0,
((pale / total) * 1) +
((bleach1 / total) * 2) +
((bleach2 / total) * 3) +
((bleach3 / total) * 4) +
((bleach4 / total) * 5) +
((recentdead / total) * 6)))
d6 <- d2 %>%
mutate(bleached.cols = total - (normal + pale)) %>%
mutate(ifelse(total == 0,0,perc_bleach = bleached.cols / total)) %>%
mutate(bleach_response = ifelse(total == 0, 0,
((pale / total) * 1) +
((bleach1 / total) * 2) +
((bleach2 / total) * 3) +
((bleach3 / total) * 4) +
((bleach4 / total) * 5) +
((recentdead / total) * 6)))
d6 <- d2 %>%
mutate(bleached.cols = total - (normal + pale)) %>%
mutate(perc_bleach = ifelse(total == 0,0,bleached.cols / total)) %>%
mutate(bleach_response = ifelse(total == 0, 0,
((pale / total) * 1) +
((bleach1 / total) * 2) +
((bleach2 / total) * 3) +
((bleach3 / total) * 4) +
((bleach4 / total) * 5) +
((recentdead / total) * 6)))
View(`d6`)
plot(d6$bleach_reponse ~ d6$perc_bleach)
View(`d6`)
plot(d6$bleach_response ~ d6$perc_bleach)
#site-level metrics
d3 <- d2 %>%
mutate(count = ifelse(d2$total > 0,1,0)) %>%
mutate(bleached = total - (normal + pale)) %>%
group_by(unique.id) %>%
mutate(site.cols = sum(total)) %>%
mutate(rel.abund = total / site.cols) %>%
mutate(pi_squared = rel.abund^2) %>%
summarise(no_genera = sum(count),
no_colonies = sum(total),
no_bleached.cols = sum(bleached),
perc_bleached = (sum(bleached) / sum(total) * 100),
simp.diversity = 1 - (sum(pi_squared)))
View(`d3`)
d6 <- d2 %>%
mutate(bleached.cols = total - (normal + pale)) %>%
mutate(perc_bleach = ifelse(total == 0,0,bleached.cols / total)) %>%
mutate(bleach_response = ifelse(total == 0, 0,
((pale / total) * 1) +
((bleach1 / total) * 2) +
((bleach2 / total) * 3) +
((bleach3 / total) * 4) +
((bleach4 / total) * 5) +
((recentdead / total) * 6))) %>%
group_by(unique.id) %>%
mutate(site.perc_bleach = sum(bleached.cols) / sum(total))
View(`d6`)
d6 <- d2 %>%
mutate(bleached.cols = total - (normal + pale)) %>%
mutate(perc_bleach = ifelse(total == 0,0,bleached.cols / total)) %>%
mutate(bleach_response = ifelse(total == 0, 0,
((pale / total) * 1) +
((bleach1 / total) * 2) +
((bleach2 / total) * 3) +
((bleach3 / total) * 4) +
((bleach4 / total) * 5) +
((recentdead / total) * 6))) %>%
group_by(unique.id) %>%
mutate(site.perc_bleach = sum(bleached.cols) / sum(total)*100)
d6 %>%
filter(site.perc_bleach > 10)
View(div)
View(`d6`)
names(d6)
d7 <- subset(d6, site.perc_bleach > 10)
View(`d7`)
d8 <- d7 %>%
group_by(genus) %>%
summarize(mean_br = mean(bleach_response))
head(d7)
d8 <- d7 %>%
ungroup() %>%
group_by(genus) %>%
summarize(mean_br = mean(bleach_response))
d7 %>%
ungroup()
d7 %>%
ungroup() %>%
group_by(genus)
d7 %>%
ungroup() %>%
group_by(genus) %>%
summarize(mean_br = mean(bleach_response))
d7 %>%
ungroup() %>%
group_by(genus) %>%
summarize(mean_br = mean(bleach_response), by = genus)
d8 <- d7 %>%
summarize(mean_br = mean(bleach_response))
View(`d7`)
d7 %>%
group_by(genus) %>%
summarize(mean_br = mean(bleach_response))
head(d7)
head(d3)
head(site_info)
head(siteinfo)
###############
#Import Solomons 2016 Kolombangara survey
#code to read in 2016 bleaching template
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Bleaching/2016 data/Solomons 2016")
getwd()
xls_files <- dir(pattern='*.xlsx$', recursive = T)
xls_files
no_files <- length(xls_files)
#read siteinfo and dump into site file
#import siteinfo and update from each sheet
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Bleaching/2016 data/Datasets")
siteinfo <- read.csv("siteinfo.csv", header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(siteinfo)
nrow(siteinfo)
names(siteinfo)
str(siteinfo)
##############
#SITE INFO file
#function to dump into siteinfo file
#sites that don't align need some deleted rows manually to get them
xls_files
for (i in 2:17) {
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Bleaching/2016 data/Solomons 2016")
excelFile <- paste(getwd(), xls_files[i], sep = "/")
mySheet <- read.xls(excelFile, sheet="GENUS BleachingTemplate")
#dump info into siteinfo
#use k to set row to dump into
k=i-1
siteinfo[k,"country"] <- as.character(mySheet[1,2])
siteinfo[k,"location"] <- as.character(mySheet[2,2])
siteinfo[k,"site"] <- as.character(mySheet[3,2])
siteinfo[k,"observer"] <- as.character(mySheet[4,2])
siteinfo[k,"year"] <- as.character(mySheet[5,2])
siteinfo[k,"month"] <- as.character(mySheet[6,2])
siteinfo[k,"day"] <- as.character(mySheet[7,2])
siteinfo[k,"lat"] <- as.character(mySheet[8,2])
siteinfo[k,"long"] <- as.character(mySheet[9,2])
siteinfo[k,"depth_m"] <- as.character(mySheet[10,2])
siteinfo[k,"temp_C"] <- as.character(mySheet[11,2])
siteinfo[k,"management"] <- as.character(mySheet[12,2])
siteinfo[k,"no_quadrats"] <- as.numeric(as.character(mySheet[99,2]))
#not sure why just as.numeric doesn't work, but it doesn't
siteinfo[k,"perc_hardcoral"] <- round(as.numeric(as.character(mySheet[96,2])), digits =2)
siteinfo[k,"perc_softcoral"] <- round(as.numeric(as.character(mySheet[97,2])), digits =2)
siteinfo[k,"perc_macroalgae"] <- round(as.numeric(as.character(mySheet[98,2])), digits =2)
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Bleaching/2016 data/Datasets")
}
head(siteinfo)
head(siteinfo)
siteinfo2 <- left_join(siteinfo,d3)
View(siteinfo2)
getwd()
write.csv(siteinfo2, "Solomons2016 site summary.csv", row.names = FALSE)
siteinfo2 <- left_join(siteinfo,d3)
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Bleaching/2016 data/Solomons 2016")
write.csv(siteinfo2, "Solomons2016 site summary.csv", row.names = FALSE)
d3 <- d2 %>%
mutate(count = ifelse(d2$total > 0,1,0)) %>%
mutate(bleached = total - (normal + pale)) %>%
group_by(unique.id) %>%
mutate(site.cols = sum(total)) %>%
mutate(rel.abund = total / site.cols) %>%
mutate(pi_squared = rel.abund^2) %>%
summarise(no_genera = sum(count),
no_colonies = sum(total),
no_bleached.cols = sum(bleached),
perc_bleached = round((sum(bleached) / sum(total) * 100),digits =2)
simp.diversity = round(1 - (sum(pi_squared)), digits = 2))
head(d3)
head(siteinfo)
View(`d3`)
#site-level metrics
d3 <- d2 %>%
mutate(count = ifelse(d2$total > 0,1,0)) %>%
mutate(bleached = total - (normal + pale)) %>%
group_by(unique.id) %>%
mutate(site.cols = sum(total)) %>%
mutate(rel.abund = total / site.cols) %>%
mutate(pi_squared = rel.abund^2) %>%
summarise(no_genera = sum(count),
no_colonies = sum(total),
no_bleached.cols = sum(bleached),
perc_bleached = round((sum(bleached) / sum(total) * 100),digits =2),
simp.diversity = round(1 - (sum(pi_squared)), digits = 2))
head(d3)
head(siteinfo)
View(`d3`)
siteinfo2 <- left_join(siteinfo,d3)
View(siteinfo2)
write.csv(siteinfo2, "Solomons2016 site summary.csv", row.names = FALSE)
#bind to siteinfo
siteinfo2 <- left_join(siteinfo,d3)
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Bleaching/2016 data/Solomons 2016")
write.csv(siteinfo2, "Solomons2016 site summary.csv", row.names = FALSE)
472/3776
472/3776*100
d5 <- d2 %>%
mutate(bleached = total - (normal + pale)) %>%
group_by(genus) %>%
summarise(no_bleached.cols = sum(bleached),
total_cols = sum(total),
perc_bleach = sum(bleached) / sum(total) * 100) %>%
arrange(desc(total_cols))
View(`d5`)
getwd()
write.csv(d5, "genera level bleaching summary.csv", row.names = FALSE)
#read in clean data at site level
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Seascapes/Indonesia MacMon/Indo Biomass paper/for R")
d <- read.csv("DATA_Fish_Transect_All_2015_v5_STP2.csv",
header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(d)
nrow(d)
names(d)
str(d)
head(d)
names(d)
nrow(d)
names(d)
par(mar = rep(1, 4))
d$Lattitude <- as.numeric(d$Lattitude)
hist(d$Lattitude)
hist(d$Longitude)
unique(d$Region2)
unique(d$Region)
unique(d$Management.Rule)
unique(d$Area.Status)
nrow(d)
names(d)
#map
# pull Indo ggmap and layer with points- of sites
map <- get_map(location=c(lon = 116, lat = -6), zoom=4,
maptype="satellite", source="google", crop = FALSE)
p <- ggmap(map)
p
#check point locations, fix any errant latitude and longitudes
names(d)
p + geom_point(aes(x = longitude, y = latitude, colour = Region2),
size = 2, alpha = 0.25,
position = position_jitter(width = 0.5, height = 0.55),
data = d)
names(d)
p + geom_point(aes(x = Longitude, y = Lattitude, colour = Region2),
size = 2, alpha = 0.25,
position = position_jitter(width = 0.5, height = 0.55),
data = d)
p + geom_point(aes(x = Longitude, y = Lattitude),
size = 2, alpha = 0.25,
position = position_jitter(width = 0.5, height = 0.55),
data = d)
p + geom_point(aes(x = Longitude, y = Lattitude),
size = 2, alpha = 0.25, colour = "white", shape = 21,
position = position_jitter(width = 0.5, height = 0.55),
data = d)
ggsave("Indomap.pdf", height = 10, width=10)
names(d)
View(d)
d2 <- d %>%
group_by(Region,Area.Status,Management.Rule,Remote.Y.N,Site.Name,Lattitude,Longitude) %>%
summarize(biomass = mean(Biomass, na.rm = TRUE)
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Seascapes/Indonesia MacMon/Indo Biomass paper/for R")
d <- read.csv("DATA_Fish_Transect_All_2015_v5_STP2.csv",
header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(d)
nrow(d)
names(d)
str(d)
par(mar = rep(1, 4))
d$Lattitude <- as.numeric(d$Lattitude)
hist(d$Lattitude)
hist(d$Longitude)
unique(d$Region)
unique(d$Management.Rule)
unique(d$Area.Status)
nrow(d)
names(d)
#map
# pull Indo ggmap and layer with points- of sites
map <- get_map(location=c(lon = 116, lat = -6), zoom=4,
maptype="satellite", source="google", crop = FALSE)
p <- ggmap(map)
p
#check point locations, fix any errant latitude and longitudes
names(d)
d2 <- d %>%
group_by(Region,Area.Status,Management.Rule,Remote.Y.N,Site.Name,Lattitude,Longitude) %>%
summarize(biomass = mean(Biomass, na.rm = TRUE))
View(d2)
p + geom_point(aes(x = Longitude, y = Lattitude, size = Biomass),
alpha = 0.25, colour = "white", shape = 21,
position = position_jitter(width = 0.5, height = 0.55),
data = d2)
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.25, colour = "white", shape = 21,
position = position_jitter(width = 0.5, height = 0.55),
data = d2)
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.25, colour = "white", shape = 21,
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(values = c(2,10))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.25, colour = "limegreen", shape = 21,
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(values = c(2,10))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.25, colour = "limegreen",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(values = c(2,10))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.25, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(values = c(2,10))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(values = c(2,10))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(values = c(3,12))
ggsave("Indomap_top10 map.pdf", height = 10, width=10)
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual("Biomass, kg/ha", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(name = "Biomass, kg/ha", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(name = "Biomass\n kg/ha", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(name = "Biomass\n kg ha-1", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(name = "Biomass \nkg ha-1", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_shape_manual(name = "Biomass", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_size_manual(name = "Biomass \nkg ha-1", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_size(name = "Biomass \nkg ha-1", values = c(3,12))
p + geom_point(aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55),
data = d2) +
scale_size(name = "Biomass \nkg ha-1", limits = c(3,12))
head(d2)
p + geom_point(data =d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55))
p
head(d2)
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg ha-1", range = c(3,12))
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg ha-1", range = c(3,7))
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg ha-1", range = c(1,5))
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg ha-1", range = c(1,6))
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg ha-1", range = c(2,7))
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg ha-1", range = c(2,8))
head(d2)
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "limegreen", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg/ha", range = c(2,8))
ggsave("Indomap_top10 map.pdf", height = 10, width=10)
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Seascapes/Indonesia MacMon/Indo Biomass paper/for R")
d <- read.csv("top10_transect_DATA_Fish_Transect_All_2015_v5_STP2.csv",
header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(d)
nrow(d)
names(d)
str(d)
## ALL WCS INdo sites
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Seascapes/Indonesia MacMon/Indo Biomass paper/for R")
d <- read.csv("RAW DATA FISH_All Regions_Final_0616.csv",
header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(d)
nrow(d)
names(d)
str(d)
## ALL WCS INdo sites
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Seascapes/Indonesia MacMon/Indo Biomass paper/for R")
d <- read.csv("RAW DATA FISH_All Regions_Final_0616.csv",
header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(d)
nrow(d)
names(d)
str(d)
par(mar = rep(1, 4))
d$Lattitude <- as.numeric(d$Lattitude)
hist(d$Lattitude)
hist(d$Longitude)
hist(d$Lattitude)
hist(d$Longitude)
unique(d$Region)
unique(d$Management.Rule)
unique(d$Area.Status)
nrow(d)
names(d)
#map
# pull Indo ggmap and layer with points- of sites
map <- get_map(location=c(lon = 116, lat = -6), zoom=4,
maptype="satellite", source="google", crop = FALSE)
p <- ggmap(map)
p
names(d)
d2 <- d %>%
group_by(Region,Site.Name,Lattitude,Longitude) %>%
summarize(biomass = mean(Average.of.Biomass, na.rm = TRUE))
head(d2)
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "grey50", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg/ha", range = c(2,8))
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "grey50", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg/ha", range = c(2,8))
setwd("/Users/emilydarling/Dropbox/4_WCS MacMon/Seascapes/Indonesia MacMon/Indo Biomass paper/for R")
d <- read.csv("RAW DATA FISH_All Regions_Final_0616.csv",
header = TRUE, stringsAsFactors = FALSE, strip.white = TRUE)
head(d)
nrow(d)
names(d)
str(d)
par(mar = rep(1, 4))
d$Lattitude <- as.numeric(d$Lattitude)
hist(d$Lattitude)
hist(d$Longitude)
unique(d$Region)
unique(d$Management.Rule)
unique(d$Area.Status)
nrow(d)
names(d)
#map
# pull Indo ggmap and layer with points- of sites
map <- get_map(location=c(lon = 116, lat = -6), zoom=4,
maptype="satellite", source="google", crop = FALSE)
p <- ggmap(map)
p
#check point locations, fix any errant latitude and longitudes
names(d)
#average up to site
names(d)
d2 <- d %>%
group_by(Region,Site.Name,Lattitude,Longitude) %>%
summarize(biomass = mean(Average.of.Biomass, na.rm = TRUE))
head(d2)
p + geom_point(data = d2, aes(x = Longitude, y = Lattitude, size = biomass),
alpha = 0.5, fill = "grey50", shape = 21, colour = "white",
position = position_jitter(width = 0.5, height = 0.55)) +
scale_size_continuous(name = "Biomass \nkg/ha", range = c(2,8))
ggsave("Indomap_all sites.pdf", height = 10, width=10)
